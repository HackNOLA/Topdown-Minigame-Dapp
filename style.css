:root {
  --pixel-size: 2px;
  --grid-cell: calc(16 * var(--pixel-size));
  --bg: #eacc79;
}

@media screen and (min-width: 768px) {
  :root {
    --pixel-size: 3px;
  }
}

@media screen and (min-width: 900px) {
  :root {
    --pixel-size: 4px;
  }
}

html,
body {
  height: 100%;
}

body {
  background: var(--bg);
  display: flex;
  align-items: center;
  justify-content: center;
}

.pixel-art {
  image-rendering: pixelated;
}

.camera {
  width: calc(var(--pixel-size) * 320);
  height: calc(var(--pixel-size) * 288);
  overflow: hidden;
  background-image: url(https://t3.ftcdn.net/jpg/04/43/69/32/360_F_443693248_FFOUon01HIYUVLVPFIyhrzDlbmWN8XKq.jpg);

  /* background: #170e5f; */
  /* background: url(https://i.imgur.com/8ZQ2Z0C.png);
  background-size: var(--grid-cell) var(--grid-cell);
  background-repeat: no-repeat;
  background-position: center;
  margin: 0 auto; */
}

.map {
  image-rendering: pixelated;
  background-image: url(https://res.cloudinary.com/https-pilot-tune-herokuapp-com/image/upload/v1675455965/DALL_E_2023-02-03_14.18.20_-_top_down_2d_pixelated_map_with_flowers_and_trees_for_web_game_kgrppz.png);
  background-size: 100%;
  width: calc(26 * var(--grid-cell));
  height: calc(20 * var(--grid-cell));
  position: relative;
  border-radius: 50px;
  border-bottom: 50px;
}

.character {
  width: calc(var(--grid-cell) * 2);
  height: calc(var(--grid-cell) * 2);
  position: absolute;
  overflow: hidden;
}

.shadow {
  width: calc(var(--grid-cell) * 2);
  height: calc(var(--grid-cell) * 2);
  position: absolute;
  left: 0;
  top: 0;
  background: url("https://assets.codepen.io/21542/DemoRpgCharacterShadow.png")
    no-repeat no-repeat;
  background-size: 100%;
}

.character_spritesheet {
  position: absolute;
  background: url("./assets/run.png") no-repeat no-repeat;
  background-size: 100%;
  width: calc(var(--grid-cell) * 24);
  height: calc(var(--grid-cell) * 8);
}

.character[walking="true"] .character_spritesheet {
  animation: walkAnimation 0.6s steps(4) infinite;
}

@keyframes walkAnimation {
  from {
    transform: translate3d(0%, 0%, 0);
  }
  to {
    transform: translate3d(-100%, 0%, 0);
  }
}
